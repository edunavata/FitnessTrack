"""initial schema

Revision ID: c53711a34cee
Revises:
Create Date: 2025-10-03 00:55:24.883671

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c53711a34cee'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exercises',
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('slug', sa.String(length=140), nullable=False),
    sa.Column('primary_muscle', sa.Enum('CHEST', 'BACK', 'SHOULDERS', 'QUADS', 'HAMSTRINGS', 'GLUTES', 'CALVES', 'BICEPS', 'TRICEPS', 'FOREARMS', 'ABS', 'OBLIQUES', 'FULL_BODY', 'OTHER', name='muscle_group'), nullable=False),
    sa.Column('movement', sa.Enum('HINGE', 'SQUAT', 'LUNGE', 'HORIZONTAL_PUSH', 'HORIZONTAL_PULL', 'VERTICAL_PUSH', 'VERTICAL_PULL', 'CARRY', 'ROTATION', 'ANTI_ROTATION', 'HIP_ABDUCTION', 'HIP_ADDUCTION', 'CALF_RAISE', 'CORE_BRACE', 'OTHER', name='movement_pattern'), nullable=False),
    sa.Column('mechanics', sa.Enum('COMPOUND', 'ISOLATION', name='mechanics'), nullable=False),
    sa.Column('force', sa.Enum('PUSH', 'PULL', 'STATIC', name='force_vector'), nullable=False),
    sa.Column('unilateral', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('equipment', sa.Enum('BARBELL', 'DUMBBELL', 'MACHINE', 'CABLE', 'BODYWEIGHT', 'KETTLEBELL', 'BAND', 'SMITH', 'TRAP_BAR', 'EZ_BAR', 'PLATE', 'OTHER', name='equipment'), nullable=False),
    sa.Column('grip', sa.String(length=50), nullable=True),
    sa.Column('range_of_motion', sa.Text(), nullable=True),
    sa.Column('difficulty', sa.Enum('BEGINNER', 'INTERMEDIATE', 'ADVANCED', name='level'), server_default='BEGINNER', nullable=False),
    sa.Column('cues', sa.Text(), nullable=True),
    sa.Column('instructions', sa.Text(), nullable=True),
    sa.Column('video_url', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default='true', nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.CheckConstraint('length(slug) > 0', name=op.f('ck_exercises_ck_exercises_slug_not_empty')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_exercises')),
    sa.UniqueConstraint('slug', name='uq_exercises_slug')
    )
    with op.batch_alter_table('exercises', schema=None) as batch_op:
        batch_op.create_index('ix_exercises_name', ['name'], unique=False)

    op.create_table('tags',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tags')),
    sa.UniqueConstraint('name', name='uq_tags_name')
    )
    op.create_table('users',
    sa.Column('email', sa.String(length=254), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name='uq_users_email'),
    sa.UniqueConstraint('username', name='uq_users_username')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index('ix_users_email', ['email'], unique=False)
        batch_op.create_index('ix_users_username', ['username'], unique=False)

    op.create_table('exercise_aliases',
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('alias', sa.String(length=120), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercises.id'], name=op.f('fk_exercise_aliases_exercise_id_exercises'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_exercise_aliases')),
    sa.UniqueConstraint('exercise_id', 'alias', name='uq_exercise_alias')
    )
    op.create_table('exercise_tags',
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercises.id'], name=op.f('fk_exercise_tags_exercise_id_exercises'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], name=op.f('fk_exercise_tags_tag_id_tags'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('exercise_id', 'tag_id', name=op.f('pk_exercise_tags')),
    sa.UniqueConstraint('exercise_id', 'tag_id', name='uq_exercise_tag')
    )
    op.create_table('subjects',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('pseudonym', sa.UUID(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_subjects_user_id_users'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_subjects')),
    sa.UniqueConstraint('pseudonym', name='uq_subjects_pseudonym'),
    sa.UniqueConstraint('user_id', name='uq_subjects_user'),
    sa.UniqueConstraint('user_id', name=op.f('uq_subjects_user_id'))
    )
    with op.batch_alter_table('subjects', schema=None) as batch_op:
        batch_op.create_index('ix_subjects_pseudonym', ['pseudonym'], unique=False)
        batch_op.create_index('ix_subjects_user_id', ['user_id'], unique=False)

    op.create_table('routines',
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('starts_on', sa.Date(), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default='true', nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name=op.f('fk_routines_subject_id_subjects'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_routines')),
    sa.UniqueConstraint('subject_id', 'name', name='uq_routines_subject_name')
    )
    with op.batch_alter_table('routines', schema=None) as batch_op:
        batch_op.create_index('ix_routines_subject_active', ['subject_id', 'is_active'], unique=False)

    op.create_table('subject_body_metrics',
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('measured_on', sa.Date(), nullable=False),
    sa.Column('weight_kg', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('bodyfat_pct', sa.Numeric(precision=4, scale=1), nullable=True),
    sa.Column('resting_hr', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name=op.f('fk_subject_body_metrics_subject_id_subjects'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_subject_body_metrics')),
    sa.UniqueConstraint('subject_id', 'measured_on', name='uq_sbm_subject_day')
    )
    with op.batch_alter_table('subject_body_metrics', schema=None) as batch_op:
        batch_op.create_index('ix_sbm_measured_on', ['measured_on'], unique=False)
        batch_op.create_index('ix_sbm_subject_id', ['subject_id'], unique=False)

    op.create_table('subject_profiles',
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('sex', sa.Enum('MALE', 'FEMALE', 'OTHER', 'PREFER_NOT_TO_SAY', name='enum_sex', create_constraint=True), nullable=True),
    sa.Column('birth_year', sa.Integer(), nullable=True),
    sa.Column('height_cm', sa.Integer(), nullable=True),
    sa.Column('dominant_hand', sa.String(length=10), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name=op.f('fk_subject_profiles_subject_id_subjects'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_subject_profiles')),
    sa.UniqueConstraint('subject_id', name='uq_subject_profiles_subject'),
    sa.UniqueConstraint('subject_id', name=op.f('uq_subject_profiles_subject_id'))
    )
    with op.batch_alter_table('subject_profiles', schema=None) as batch_op:
        batch_op.create_index('ix_subject_profiles_subject_id', ['subject_id'], unique=False)

    op.create_table('cycles',
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('routine_id', sa.Integer(), nullable=False),
    sa.Column('cycle_number', sa.Integer(), nullable=False),
    sa.Column('started_on', sa.Date(), nullable=True),
    sa.Column('ended_on', sa.Date(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.CheckConstraint('cycle_number > 0', name=op.f('ck_cycles_ck_cycles_number_positive')),
    sa.ForeignKeyConstraint(['routine_id'], ['routines.id'], name=op.f('fk_cycles_routine_id_routines'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name=op.f('fk_cycles_subject_id_subjects'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cycles')),
    sa.UniqueConstraint('routine_id', 'cycle_number', name='uq_cycles_routine_number')
    )
    with op.batch_alter_table('cycles', schema=None) as batch_op:
        batch_op.create_index('ix_cycles_routine', ['routine_id'], unique=False)
        batch_op.create_index('ix_cycles_subject_started_on', ['subject_id', 'started_on'], unique=False)

    op.create_table('routine_days',
    sa.Column('routine_id', sa.Integer(), nullable=False),
    sa.Column('day_index', sa.Integer(), nullable=False),
    sa.Column('is_rest', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('title', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['routine_id'], ['routines.id'], name=op.f('fk_routine_days_routine_id_routines'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_routine_days')),
    sa.UniqueConstraint('routine_id', 'day_index', name='uq_routine_days_routine_day_index')
    )
    op.create_table('routine_day_exercises',
    sa.Column('routine_day_id', sa.Integer(), nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercises.id'], name=op.f('fk_routine_day_exercises_exercise_id_exercises'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['routine_day_id'], ['routine_days.id'], name=op.f('fk_routine_day_exercises_routine_day_id_routine_days'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_routine_day_exercises')),
    sa.UniqueConstraint('routine_day_id', 'position', name='uq_rde_day_pos')
    )
    with op.batch_alter_table('routine_day_exercises', schema=None) as batch_op:
        batch_op.create_index('ix_rde_day_exercise', ['routine_day_id', 'exercise_id'], unique=False)

    op.create_table('workout_sessions',
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('workout_date', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'COMPLETED', name='workout_status'), server_default='PENDING', nullable=False),
    sa.Column('routine_day_id', sa.Integer(), nullable=True),
    sa.Column('cycle_id', sa.Integer(), nullable=True),
    sa.Column('location', sa.String(length=120), nullable=True),
    sa.Column('perceived_fatigue', sa.Integer(), nullable=True),
    sa.Column('bodyweight_kg', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['cycle_id'], ['cycles.id'], name='fk_ws_cycle_id', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['routine_day_id'], ['routine_days.id'], name=op.f('fk_workout_sessions_routine_day_id_routine_days'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name=op.f('fk_workout_sessions_subject_id_subjects'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_workout_sessions')),
    sa.UniqueConstraint('subject_id', 'workout_date', name='uq_ws_subject_date')
    )
    with op.batch_alter_table('workout_sessions', schema=None) as batch_op:
        batch_op.create_index('ix_ws_cycle', ['cycle_id'], unique=False)
        batch_op.create_index('ix_ws_routine_day', ['routine_day_id'], unique=False)

    op.create_table('routine_exercise_sets',
    sa.Column('routine_day_exercise_id', sa.Integer(), nullable=False),
    sa.Column('set_index', sa.Integer(), nullable=False),
    sa.Column('is_warmup', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('to_failure', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('target_weight_kg', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('target_reps', sa.Integer(), nullable=True),
    sa.Column('target_rir', sa.Integer(), nullable=True),
    sa.Column('target_rpe', sa.Numeric(precision=3, scale=1), nullable=True),
    sa.Column('target_tempo', sa.String(length=15), nullable=True),
    sa.Column('target_rest_s', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['routine_day_exercise_id'], ['routine_day_exercises.id'], name=op.f('fk_routine_exercise_sets_routine_day_exercise_id_routine_day_exercises'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_routine_exercise_sets')),
    sa.UniqueConstraint('routine_day_exercise_id', 'set_index', name='uq_res_rde_set_idx')
    )
    op.create_table('exercise_set_logs',
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('planned_set_id', sa.Integer(), nullable=True),
    sa.Column('performed_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('set_index', sa.Integer(), nullable=False),
    sa.Column('is_warmup', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('to_failure', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('actual_weight_kg', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('actual_reps', sa.Integer(), nullable=True),
    sa.Column('actual_rir', sa.Integer(), nullable=True),
    sa.Column('actual_rpe', sa.Numeric(precision=3, scale=1), nullable=True),
    sa.Column('actual_tempo', sa.String(length=15), nullable=True),
    sa.Column('actual_rest_s', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercises.id'], name=op.f('fk_exercise_set_logs_exercise_id_exercises'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['planned_set_id'], ['routine_exercise_sets.id'], name=op.f('fk_exercise_set_logs_planned_set_id_routine_exercise_sets'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['session_id'], ['workout_sessions.id'], name=op.f('fk_exercise_set_logs_session_id_workout_sessions'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name=op.f('fk_exercise_set_logs_subject_id_subjects'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_exercise_set_logs')),
    sa.UniqueConstraint('subject_id', 'exercise_id', 'performed_at', 'set_index', name='uq_esl_session_set')
    )
    with op.batch_alter_table('exercise_set_logs', schema=None) as batch_op:
        batch_op.create_index('ix_esl_by_session', ['subject_id', 'exercise_id', 'session_id', 'set_index'], unique=False)
        batch_op.create_index('ix_esl_exercise_time', ['exercise_id', 'performed_at'], unique=False)
        batch_op.create_index('ix_esl_planned', ['planned_set_id'], unique=False)
        batch_op.create_index('ix_esl_subject_time', ['subject_id', 'performed_at'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('exercise_set_logs', schema=None) as batch_op:
        batch_op.drop_index('ix_esl_subject_time')
        batch_op.drop_index('ix_esl_planned')
        batch_op.drop_index('ix_esl_exercise_time')
        batch_op.drop_index('ix_esl_by_session')

    op.drop_table('exercise_set_logs')
    op.drop_table('routine_exercise_sets')
    with op.batch_alter_table('workout_sessions', schema=None) as batch_op:
        batch_op.drop_index('ix_ws_routine_day')
        batch_op.drop_index('ix_ws_cycle')

    op.drop_table('workout_sessions')
    with op.batch_alter_table('routine_day_exercises', schema=None) as batch_op:
        batch_op.drop_index('ix_rde_day_exercise')

    op.drop_table('routine_day_exercises')
    op.drop_table('routine_days')
    with op.batch_alter_table('cycles', schema=None) as batch_op:
        batch_op.drop_index('ix_cycles_subject_started_on')
        batch_op.drop_index('ix_cycles_routine')

    op.drop_table('cycles')
    with op.batch_alter_table('subject_profiles', schema=None) as batch_op:
        batch_op.drop_index('ix_subject_profiles_subject_id')

    op.drop_table('subject_profiles')
    with op.batch_alter_table('subject_body_metrics', schema=None) as batch_op:
        batch_op.drop_index('ix_sbm_subject_id')
        batch_op.drop_index('ix_sbm_measured_on')

    op.drop_table('subject_body_metrics')
    with op.batch_alter_table('routines', schema=None) as batch_op:
        batch_op.drop_index('ix_routines_subject_active')

    op.drop_table('routines')
    with op.batch_alter_table('subjects', schema=None) as batch_op:
        batch_op.drop_index('ix_subjects_user_id')
        batch_op.drop_index('ix_subjects_pseudonym')

    op.drop_table('subjects')
    op.drop_table('exercise_tags')
    op.drop_table('exercise_aliases')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index('ix_users_username')
        batch_op.drop_index('ix_users_email')

    op.drop_table('users')
    op.drop_table('tags')
    with op.batch_alter_table('exercises', schema=None) as batch_op:
        batch_op.drop_index('ix_exercises_name')

    op.drop_table('exercises')
    # ### end Alembic commands ###
